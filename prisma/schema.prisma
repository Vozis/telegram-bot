// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int    @id @default(autoincrement())
  telegramId Float  @unique @map("telegram_id")
  firstName  String @default("empty") @map("first_name")
  lastName   String @default("empty") @map("last_name")
  userName   String @unique @map("user_name")

  groups Group[] @relation("GroupToUser")

  isAdmin Boolean @default(false) @map("is_admin")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Group {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  level      LevelEnum @default(BASE)
  telegramId Float     @unique @map("telegram_id")

  user User[] @relation("GroupToUser")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  lessons  Lesson[]
  cronJobs CronJob[]

  @@map("groups")
}

model Lesson {
  id   Int    @id @default(autoincrement())
  day  String
  time Int    @default(720)
  name String @default("Новый урок") @db.VarChar(1000)

  isEnable Boolean @default(true) @map("is_enable")
  duration Int     @default(90)

  group   Group? @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId Int?

  cronJobs CronJob[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([groupId, day, time], name: "compositeTime")
  @@map("lessons")
}

model CronJob {
  id      Int    @id @default(autoincrement())
  name    String @unique
  time    String
  message String @default("Новое уведомление") @db.VarChar(1000)

  group   Group @relation(fields: [groupId], references: [telegramId], onDelete: Cascade)
  groupId Float

  lesson   Lesson @relation(fields: [lessonId], references: [id], onDelete: Cascade)
  lessonId Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("cron_jobs")
}

enum LevelEnum {
  START
  BASE
  INTERMEDIATE
  ADVANCED
}
